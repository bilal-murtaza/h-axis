name: Deploy Vue App to GitHub Pages

on:
  push:
    branches: [ "master", "main" ]
  workflow_dispatch: # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Build static site
      run: |
        pnpm static
        # Copy public assets
        cp -r public/* dist/ 2>/dev/null || true
        # Remove Laravel-specific files
        rm -f dist/index.php 2>/dev/null || true
        rm -f dist/.htaccess 2>/dev/null || true
        # Create .nojekyll for GitHub Pages
        touch dist/.nojekyll
        # Create CNAME file for custom domain
        echo "axis.easyapps.io" > dist/CNAME

    - name: List dist contents (debug)
      run: |
        echo "Contents of dist directory:"
        ls -la dist/
        echo "CNAME content:"
        cat dist/CNAME || echo "CNAME file not found"

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
